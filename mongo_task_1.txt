1.>  Find all the information about each products
Ans.> db.products.find({}).pretty()

2.> Find the product price which are between 400 to 800.
Ans.> db.collection.find({
  $and: [
    {
      product_price: {
        $gt: 400
      }
    },
    {
      product_price: {
        $lt: 800
      }
    }
  ]
})


3.> Find the product price which are not between 400 to 600
Ans.> db.collection.find({
  $or: [
    {
      product_price: {
        $gt: 800
      }
    },
    {
      product_price: {
        $lt: 400
      }
    }
  ]
})

4.> List the four product which are grater than 500 in price
Ans.> db.products.find({product_price: {$gt: 500}}).limit(4).pretty()

5.> Find the product name and product material of each products.
Ans.> db.products.find({}, {_id:0, id:0, product_price:0, product_color:0}).pretty()

6.> Find the product with a row id of 10
Ans.> db.collection.find({
  id: "10"
}).pretty()

7.> Find only the product name and product material
Ans.> db.products.find({}, {_id:0, id:0, product_price:0, product_color:0}).pretty()

8.> Find all products which contain the value of soft in product material 
Ans.> db.products.find({product_material:"Soft"}).pretty()

9.> Find products which contain product color indigo  and product price 492.00
Ans.> db.collection.find({
  "$and": [
    {
      product_color: "Indigo"
    },
    {
      product_price: 492
    }
  ]
})

10.> Delete the products which product price value are same
Ans.> db.products.aggregate([
 {
     "$group": {
         price:{$gt:0} 
 },
 {
     "$match": {
       price:{$gt:0} 
     }
 }
]).forEach(function(doc) {
   doc.dups.shift();
   db.products.remove({
       _id: {$in: doc.dups}
   });
})
